version: 2.1.99.{build}-{branch}

cache:
  - windows/dependencies

build:
  parallel: true
  verbosity: detailed

configuration:
  - release
#  - debug

branches:
  except:
    - v1.4
    - v1.6
    - v1.8

environment:
  global:
    MAKETOOL: jom
    TOOLSDIR: C:\Qt\Tools\QtCreator
    PLATFORM: x86

  matrix:
    - QTVER: 5.7
      QTDIR: C:\Qt\5.7\msvc2015
      QMAKESPEC: win32-msvc2015
      VSVER: 14
    - PLATFORM: x64
      QTVER: 5.7
      QTDIR: C:\Qt\5.7\msvc2015_64
      QMAKESPEC: win32-msvc2015
      VSVER: 14

install:
  - set CPU_ARCH=32
  - IF "%PLATFORM%" == "x64" (set CPU_ARCH=64)
  - set OPENSSL_DIR="C:\OpenSSL-Win%CPU_ARCH%"
  - set ICU_DIR_NAME=icu4c-54_1-Win%CPU_ARCH%-msvc10
  - set ICU_DOWNLOAD_URL="http://download.icu-project.org/files/icu4c/54.1/%ICU_DIR_NAME%.zip"
  - call "C:\Program Files (x86)\Microsoft Visual Studio "%VSVER%".0\VC\vcvarsall.bat" %PLATFORM%
  - set PATH=%QTDIR%\bin;%TOOLSDIR%\bin;%OPENSSL_DIR%\bin;%CD%\bin;%PATH%
  - set BUILD_ID="%APPVEYOR_BUILD_VERSION%_qt%QTVER%_%QMAKESPEC%_%CONFIGURATION%_%PLATFORM%"

build_script:
  # - dir %QTDIR%\bin\*.dll
  # - dir %TOOLSDIR%\
  # - dir %TOOLSDIR%\bin\
  # - exit(1)
  - echo "QupZilla BUILD %BUILD_ID%"
  - set
  - set QZ_BIN_DIR=%CD%\bin
  - dir C:\Qt
  - qmake -v
  - qmake CONFIG+=%CONFIGURATION% INCLUDEPATH+="%OPENSSL_DIR%\include" LIBS+=-L%OPENSSL_DIR%\lib QupZilla.pro
  - call %MAKETOOL%
  - 7z a QupZilla_%BUILD_ID%_bin.zip bin

test_script:
  - cd tests/autotests
  - qmake CONFIG+=%CONFIGURATION% INCLUDEPATH+="%OPENSSL_DIR%\include" LIBS+=-L%OPENSSL_DIR%\lib
  - call %MAKETOOL%
  - call %CONFIGURATION%\autotests.exe


after_build:
  # prepare dependencies
  - echo [Paths] > %QZ_BIN_DIR%\qt.conf && echo Plugins="." >> %QZ_BIN_DIR%\qt.conf
  - copy  %QZ_BIN_DIR%\..\COPYRIGHT %QZ_BIN_DIR%\COPYRIGHT.txt
  - cd windows
  - mkdir dependencies
  - cd dependencies
  - dir
  - IF NOT EXIST "%ICU_DIR_NAME%.zip" ( appveyor DownloadFile %ICU_DOWNLOAD_URL% ) else ( echo "Use cache %ICU_DIR_NAME%")
  - IF NOT EXIST "KillProcDllFindProcDll.zip" (
        appveyor DownloadFile "http://github.com/srazi/qupzilla/raw/NSIS-Plugins-for-installer/windows/dependencies/KillProcDllFindProcDll.zip" ) else ( echo "Use cache KillProcDll")
  - IF NOT EXIST "Registry.zip" (
        appveyor DownloadFile "http://nsis.sourceforge.net/mediawiki/images/4/47/Registry.zip" ) else (echo "Use cache Registry")
  - IF NOT EXIST "AppAssocReg-0.4.zip" (
        appveyor DownloadFile "http://nsis.sourceforge.net/mediawiki/images/d/d4/AppAssocReg-0.4.zip" ) else (echo "Use cache Registry")
  - IF NOT EXIST "master.tar.gz" (
        appveyor DownloadFile "http://chromium.googlesource.com/chromium/deps/hunspell_dictionaries/+archive/master.tar.gz" ) else (echo "Use cache Registry")
  - dir
  - mkdir ..\wininstall
  - cd ..\wininstall
  - copy ..\*.nsh .\
  - copy ..\*.ico .\
  - copy ..\*.bmp .\
  # prepare nsis plugins
  - 7z x "..\dependencies\KillProcDllFindProcDll.zip"
  - 7z x ..\dependencies\Registry.zip
  - 7z x ..\dependencies\AppAssocReg-0.4.zip
  - copy Desktop\Plugin\*.dll .\
  - copy Plugins\*.dll .\
  # prepare icu
  - 7z x "..\dependencies\%ICU_DIR_NAME%.zip"
  # - copy icu\bin%CPU_ARCH%\*.dll .\
  # prepare hunspell 
  - mkdir hunspell
  - cd hunspell
  - 7z x ..\..\dependencies\master.tar.gz
  - 7z x master.tar
  - mkdir doc
  - move README* doc/
  - move COPYING* doc/
  - move *.aff ./
  - move *.dic ./
  - cd ..
  - dir /s
  - cd hunspell
  # change directory to windows
  - cd ../..
  # set paths
  - set OPENSSL_BIN_DIR="%OPENSSL_DIR%\bin"
  - set MSVC_REDIST_DIR="C:\Program Files (x86)\Microsoft Visual Studio "%VSVER%".0\VC\redist\%PLATFORM%\Microsoft.VC%VSVER%0.CRT"
  - set ICU_BIN_DIR="%QZ_BIN_DIR%\..\windows\wininstall\icu\bin"
  - IF "%PLATFORM%" == "x64" (set ICU_BIN_DIR="%QZ_BIN_DIR%\..\windows\wininstall\icu\bin64")
  - set QT_BIN_DIR="%QTDIR%\bin"
  - set QT_PLUGINS_DIR="%QTDIR%\plugins"
  - set HUNSPELL_DIR="%QZ_BIN_DIR%\..\windows\wininstall\hunspell"
  # make installer
  - call "C:\Program Files (x86)\NSIS\makensis.exe" /DCUSTOM_PATH=1 /DMSVC_VER=%VSVER%0 /DOPENSSL_BIN_DIR=%OPENSSL_BIN_DIR% /DMSVC_REDIST_DIR=%MSVC_REDIST_DIR% /DQZ_BIN_DIR=%QZ_BIN_DIR% /DQT_CREATOR_BIN_DIR=%ICU_BIN_DIR% /DQT_DIR=%QTDIR% /DQT_BIN_DIR=%QTDIR%\bin /DQT_PLUGINS_DIR=%QTDIR%\plugins /DHUNSPELL_DIR=%HUNSPELL_DIR% installer.nsi
  - dir

artifacts:
   - path: QupZilla*.exe
     name: QupZilla Installer (%PLATFORM%)
   - path: QupZilla*.zip
     name: Archived bin directory (%PLATFORM%)
   - path: bin\*.exe
     name: QupZilla Executable (%PLATFORM%)
   - path: bin\*.dll
     name: QupZilla DLL (%PLATFORM%)

# deploy:
    # release: QupZilla-v$(appveyor_build_version)
    # description: 'AppVeyor Builds'
    # provider: GitHub
    # auth_token:
      # secure:                               # your encrypted token from GitHub
    # artifact: /QupZilla.*\.zip/             # Archived bin directory
    # draft: false
    # prerelease: false
    # # on:
      # # branch: master                      # release from master branch only
      # # appveyor_repo_tag: true             # deploy on tag push only

# notifications:
  # - provider: Email
    # to:
      # - email 1
      # - email 2
    # on_build_success: false
    # on_build_failure: false
    # on_build_status_changed: true
